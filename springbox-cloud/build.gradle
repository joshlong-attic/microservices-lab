buildscript {
    ext {
        springBootVersion = '1.2.1.BUILD-SNAPSHOT'
        springCloudVersion = '1.0.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        jcenter()
        maven { url "https://repo.spring.io/plugins-snapshot" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.3.1.BUILD-SNAPSHOT"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: "io.spring.dependency-management"

    repositories {
//        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://m2.neo4j.org/content/repositories/releases" }
    }

//    dependencyManagement {
//        dependencies {
//            dependencySet(group:"org.springframework.boot", version: "1.2.1.BUILD-SNAPSHOT") {
//                entry "spring-boot-starter-actuator"
//                entry "spring-boot-actuator"
//                entry "spring-boot-starter"
//                entry "spring-boot-starter-web"
//                entry "spring-boot-starter-actuator"
//                entry "spring-boot"
//                entry "spring-boot-autoconfigure"
//            }
//        }
//    }
}

subprojects {
    apply plugin: 'spring-boot'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector:1.1.0.RELEASE")
        compile("org.springframework.cloud:spring-cloud-spring-service-connector:1.1.0.RELEASE")
        compile("org.springframework.cloud:spring-cloud-starter-hystrix:${springCloudVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-eureka:${springCloudVersion}")

        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}

project(':catalog') {
    jar {
        baseName = 'catalog'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-jpa")
        compile(project(':lattice-client'))
        runtime("org.hsqldb:hsqldb")
        runtime("postgresql:postgresql:9.1-901-1.jdbc4")
        runtime("mysql:mysql-connector-java:5.1.25")
    }
}

project(':configserver') {
    jar {
        baseName = 'configserver'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
        compile("org.springframework.cloud:spring-cloud-config-server:${springCloudVersion}")
        compile(project(':lattice-client'))
    }
}

project(':eureka') {
    jar {
        baseName = 'eureka'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-eureka-server:${springCloudVersion}")
    }

    configurations.all {
        exclude group: "org.slf4j", module: "log4j-over-slf4j"
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    springBoot {
        requiresUnpack = ['com.netflix.eureka:eureka-core', 'com.netflix.eureka:eureka-client']
    }
}

project(':turbine') {
    jar {
        baseName = 'turbine'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-turbine-amqp:${springCloudVersion}")
    }
}

project(':gateway') {
    jar {
        baseName = 'gateway'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zuul:${springCloudVersion}")
        compile("org.springframework.cloud:spring-cloud-netflix-hystrix-amqp:${springCloudVersion}")
        compile(project(':lattice-client'))
    }
}

project(':hystrixDashboard') {
    jar {
        baseName = 'hystrixDashboard'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-hystrix-dashboard:${springCloudVersion}")
    }
}

project(':recommendations') {
    jar {
        baseName = 'recommendations'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
        compile("org.springframework.data:spring-data-neo4j-rest:3.3.0.M1")
        compile("org.hibernate:hibernate-validator")
    }
}

project(':reviews') {
    jar {
        baseName = 'reviews'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
